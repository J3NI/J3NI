#! /usr/bin/env python
# encoding: utf-8

# the following two variables are used by the target "waf dist"
VERSION='0.0.1'
APPNAME='J3NI'

# these variables are mandatory ('/' are converted automatically)
top = '.'
out = '.build'

def options(opt):
    opt.add_option('--test', default=False, action='store_true', help='Create cxxtest runner executable')
    opt.load('compiler_cxx')

def configure(conf):
    conf.load('compiler_cxx')

def build(bld):
    source_files = ['DaemonServer.cpp', 'MsgHandler.cpp', 'IpmiMessage.cpp', 'ChannelCMD.cpp', 'ChassisCMD.cpp', 'PefCMD.cpp', 'SessionCMD.cpp', 'SoLCMD.cpp', 'LANCMD.cpp' ]

    if bld.options.test :
        run_str = "../tools/cxxtest-4.3/bin/cxxtestgen  -f --xunit-printer --xunit-file J3NI_test_run.xml -o  ../test/runner.cpp  ../test/testMessages.h ../test/testChassis.h --include IpmiMessage.h --include IpmiCommandDefines.h --include MsgHandler.h --include DaemonServer.h --include ChannelCMD.h  --include ChassisCMD.h --include SessionCMD.h --include SoLCMD.h --include LANCMD.h "
        bld.exec_command(run_str)
        source_files.append('../test/runner.cpp')
        exec_target = 'TestJ3NI'
    else:
        source_files.append('main.cpp') 
        exec_target = 'J3NI'
        
    bld.program(
    
        source       = source_files,
        target       = exec_target,
        includes     = ['../tools/cxxtest-4.3/', '.'],
        install_path = '../bin'
    )
